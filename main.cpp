#include "minhash.h"
#include <iostream>
using std::cout;
using std::endl;

int main() {
    string A_string = "AAACTGGTCAACTCGGGTAAAGCTGCTCAGGGTCGAGGTTCATTACTCCAAAGTAATTGCTGGCTCAGCGGGTTCTACCAAAAGAACACGCATTCGGGACCGTCACTAACTGGAACGCGTTTATAAAATACTATACCTTCGCCGGATTGTTTCTTTGATATGGCATTCCGTAACGTATCACGTACAGCGTATAGGACTGGACAGACCATCTAGCAACGCGCTAAAGTCAAGCGCGGAACCGCACTCAGCGTTCAAAACCGTCCTTACAACGGTGGGCGAACACATTCAGGTCCGGTTGAGTTTGCTTTGATCCAGCTCTGAATTAGTAGCCTTGTAGGGTTGTAATGTGTAGTATAACTTTAATACTGGGCGCCCTGTTACGAGAGGACCAGTCCACATGGTGGTCCCCCCAGTCCATTCGCCACACTAATGGGTGTGCAGCCGTCATTGGTTTGGGAAACTCCAGCGTAACTCTGGCGCTTGTGCGGTACAAGAGGTCCCTCAGTGGCACGTTTTTAGTCTTTCACTTGGGTCTGTCAACGGACTGAGTATCCTCCGGAATCGAATATTTCACCGTTGTCAAGTTTTGAACCTCGAGCGGGAAAATGATCAATGTGTAACCTAACTTGGCTTCAGGGATTGCGAGGCACATTCTTATTTGTCCGGTAAGAGACACAGCGAGAAGGGGTCAGGACGGATCGCCGTGACTATCAAAAGTATCAAGGTAACCTGCCTCTTAGTCATCAACCCGGACCCTGAGTTAGGTTCCACTCCCATGGCAAGGGATGAGGATCTCCAAACTGAGTCTCCATACTTGTTCTACCAACCACTGTGACGGTAGGGACACACGTTGCGTCTATCGTCCGAGGCCACGCGGGCTGAGATGCTACATCGCTCGTTAGCCTCATCTCGTTCTTGCAGGGCCAGGCACGTTACCAGTAGTGCTCTAGGATGCATTCCCGCTCAAAAGTACAACGACTACCGGCATATTATGGAGACC";
    string B_string = "AAACTGGTCAACTCGGGTAAAGCTGCTCAGGGTCGAGGTTCATTACTCCAAAGTAATTGCTGGCTCAGCGGGTTCTACCAAAAGAACACGCATTCGGGACCGTCACTAACTGGAACGCGTTTATAAAATACTATACCTTCGCCGGATTGTTTCTTTGATATGGCATTCCGTAACGTATCACGTACAGCGTATAGGACTGGACAGACCATCTAGCAACGCGCTAAAGTCAAGCGCGGAACCGCACTCAGCGTTCAAAACCGTCCTTACAACGGTGGGCGAACACATTCAGGTCCGGTTGAGTTTGCTTTGATCCAGCTCTGAATTAGTAGCCTTGTAGGGTTGTAATGTGTAGTATAACTTTAATACTGGGCGCCCTGTTACGAGAGGACCAGTCCACATGGTGGTCCCCCCAGTCCATTCGCCACACTAATGGGTGTGCAGCCGTCATTGGTTTGGGAAACTCCAGCGTAACTCTGGCGCTTGTGCGGTACAAGAGGTCCCTCAGTGGCACGTTTTTAGTCTTTCACTTGGGTCTGTCAACGGACTGAGTATCCTCCGGAATCGAATATTTCACCGTTGTCAAGTTTTGAACCTCGAGCGGGAAAATGATCAATGTGTAACCTAACTTGGCTTCAGGGATTGCGAGGCACATTCTTATTTGTCCGGTAAGAGACACAGCGAGAAGGGGTCAGGACGGATCGCCGTGACTATCAAAAGTATCAAGGTAACCTGCCTCTTAGTCATCAACCCGGACCCTGAGTTAGGTTCCACTCCCATGGCAAGGGATGAGGATCTCCAAAGACTTATAATTGCTAGACCGATGTCCGGGAAAAAGGTTGGTCTCGTTCGAGGATTCACCCACCGTATCTGGTTTTAACGAACCTATGGTTGAGAAGACAGTTAGGGGCTATTCGGGCCAGCTCTACTTTTTCGGTGTCTGTTACTGACTCCTACTGGGTAGCGGTCTTTCGTATTGCCAAGGGCCATCCACCGATGACGG";
    // string B_string = "CTCGCATTGGTCGGCCTCACGATGTAGAGCCATACACGTTGAATTGGTCTGTGCACATTATTGTGCCCCGAGTTCGATAATATAACTGAGTCTCACCGTTACTCCAGTGCCTGAAGCGCCTATGGTTCCTTTAGATACACCTGACAGTTGGGTTTTAGCATAGGCACGCCTGCTCGTACCGGCTACCCTTCTGTCGGCCTAGTGGCTAGTCCTGTCGTGGCCTCCCTTAATGCCGTCCTCCGCCTGGAAGAACGGATACTGGATTCTGCGGTTTAATTAGGCTGGGTCAGGCTAATGCGAGTGCCTACTGTGAGGCGACTCAGGGACACTCTATATCAGCCTATGTAGACGTGGTCAACACGTAGTTTCCGCCGGGCCCGGTGGGTTGTAGATATCGCCAGTATGGCAAGTCACCAACGATCCTTCATGATACGCGGGTTCGCCTTGTCGGTGAGACCTCTAGTCTTGCTTAACTTTTACTAATGAGGGAGATAGGTGCCTTTGAGTGTGATGTCGCAACTCTCTCGAAACTAACCGTATTACGTACATTGTAGACTGGGAGCGCTTGGACGGATCGATCTAGGAAGATTATGTGCCTGTCATGTTCTGCAGGGCTCTAGCCGGAAGATTCGCGTTGCCCTCCTGGAAATCTGTCTGAGGCATGAAGATCTTATGACGTGTCGTGGCTGCACAACAATAGCGTATTCTCTATTGCTTCACTCATCCAAGTGGAGGGCCACGTGACTGGGGACATTTTAGTAACCATCACATCCACAACGCAAGACGTTGGTTACGGGCTAGTACGCTGCATTGCCTGTGGCGCGTGCTACATTTACGCTTGGTACTCTTCCCGACTGGTTCGGGGGCCGTTCCGCTATTCTCAAATCGAACAACGATTAATCAACCAGCCAGAATCGACAGTCGTTAGCTAAGACAAATTTCAATGATCATCTTCGAGTGTTGCCATAGTATCTCACGGCTCAAGTGGAAGTTAACAGGT";
   
    int k = 10;
    unordered_set<string> A = make_kmer_set(A_string, k);
    unordered_set<string> B = make_kmer_set(B_string, k);
    hash<string> myhash;
    int s = 100;
    unordered_set<string> A_sketch = bottom_k_sketch_fromfile("A.txt", k, myhash, s);
    unordered_set<string> B_sketch =  bottom_k_sketch_fromfile("B.txt", k, myhash, s);
    std::cout << estimate_jaccard(A_sketch, B_sketch, myhash, s) << std::endl;

    double intersect_size = 0;
    for (const auto& kmer : A) {
        if (B.find(kmer) != B.end()) {
            intersect_size++;
        }
    }
    std::cout << "actual:" << intersect_size/(A.size() + B.size() - intersect_size) << std::endl;
}